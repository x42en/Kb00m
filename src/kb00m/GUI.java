package kb00m;

/*
 * © 2013 - Certiwise Software Services (www.certiwise.com)
 * 
 * KB00m code is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public 
 * License as published by the Free Software Foundation; either 
 * version 2.1 of the License, or (at your option) any later version.
 *
 * This code is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public 
 * License along with this program; if not, write to the Free 
 * Software Foundation, Inc., 59 Temple Place - Suite 330, Boston, 
 * MA  02111-1307, USA.
 * 
 * Author      : Ben Mz
 * Contact Mail: bmz at certiwise dot com
 * Softwares   : JXTA Version 2.7, JDK Version 1.6.0_05, NetBeans IDE Version 7.1.1, BouncyCastle Version 1.47
 * 
 */

import java.awt.Color;
import java.awt.Component;
import java.awt.Image;
import java.awt.Toolkit;
import java.awt.datatransfer.Clipboard;
import java.awt.datatransfer.StringSelection;
import java.awt.event.*;
import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.*;
import javax.swing.table.DefaultTableCellRenderer;
import kb00m.PartTransfertModel.Transfert;
import net.jxta.exception.PeerGroupException;
import net.jxta.id.IDFactory;
import net.jxta.peer.PeerID;
import net.jxta.peergroup.PeerGroup;
import net.jxta.protocol.ContentAdvertisement;

/**
 *
 * @author usr
 */
public class GUI extends javax.swing.JFrame {
    
    private static JLabel curTitle = new JLabel();
    private static JPanel curPanel = new JPanel();
    
    //Defining Class Variables
//    private final ImageIcon mp3Icon = new ImageIcon(getClass().getResource("/Picts/Small/mp3Icon.png"));
//    private final ImageIcon VideoIcon = new ImageIcon(getClass().getResource("/Picts/Small/videoIcon.png"));
//    private final ImageIcon OthersIcon = new ImageIcon(getClass().getResource("/Picts/Small/otherfilesIcon.png"));
//    private final ImageIcon delete = new ImageIcon(getClass().getResource("/Picts/Small/delete.png"));
    
    static String sharedPath = null;
    //static String PathPM = null;
    //Original check sum which will be taken from Content Advertisement
    //to make sure download is not corrupted
    static String OriginalCheckSum = "unknown";
    static String myFileName = null;
    
    //Classes that needed to launch into jxta, share contenets through JXTA network,
    //Search for content, Download content, Chat services and Peers Listing in Group
    private static Config config = null;
    static Core b00mCore = null;
    
    static  PeerGroup b00mGroup = null;
    private static String privateGroupContext=null;
    private static String filePMPath = null;
    private static HashMap<String,CustomGroup> customGroups = null;
    private UserModel userList = null;
    private static PeerGroupModel groupList = null;
    private LibraryModel library = null;
    private SearchModel searchResults = null;
    private PartTransfertModel downloadList = null;
    private PartTransfertModel uploadList = null;
    private static boolean setNickName = false;
    //private int nbTabs = 3;
    //private DefaultListModel PPGList = new DefaultListModel();
    
    //private int nbGroups = 3;
    static ContentAdvertisement [] contentAdv = null;
    
    /**
     * Creates new form GUI
     */
    public GUI() {
//        java.net.URL url = ClassLoader.getSystemResource("/Kb00m/Picts/Various/Bomb.png");
//        Toolkit kit = Toolkit.getDefaultToolkit();
//        Image img = kit.createImage(url);
//        setIconImage(img);
        
        initComponents();
        
        GUI.curTitle = GUI.jLabelHome;
        GUI.curPanel = GUI.jPanelHome;
        GUI.jPanelInit.setVisible(false);
        GUI.jPanelShares.setVisible(false);
        GUI.jPanelUsers.setVisible(false);
        GUI.jPanelChat.setVisible(false);
        GUI.jPanelPeerings.setVisible(false);
        GUI.jPanelSettings.setVisible(false);
        GUI.jPanelLog.setVisible(false);
        
        addWindowListener(new WindowAdapter()
        {
            @Override
            public void windowClosing(WindowEvent e)
            {
                disconnectB00m();
                System.out.println("Bye... !!\n");
                dispose();
                System.exit(0); //calling the method is a must
            }
        });
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Disclaimer = new javax.swing.JDialog();
        jHeaderAlert1 = new javax.swing.JPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanelAlert = new javax.swing.JPanel();
        jScrollPane6 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jLabelAlert = new javax.swing.JLabel();
        jButtonCancel = new javax.swing.JButton();
        jButtonStart = new javax.swing.JButton();
        jCheckBoxAcceptDisclaimer = new javax.swing.JCheckBox();
        jCheckBoxAcceptAdult = new javax.swing.JCheckBox();
        jDialogCustomGroup = new javax.swing.JDialog();
        jHeaderAlert2 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        label1 = new java.awt.Label();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jCustomGroupTitle = new javax.swing.JTextField();
        jCustomGroupSecurity = new javax.swing.JComboBox();
        jCustomGroupCreate = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel22 = new javax.swing.JLabel();
        onOffPublish = new com.petersoft.advancedswing.onoffbutton.OnOffButton();
        jLoading = new javax.swing.JDialog();
        jProgressLoading = new javax.swing.JProgressBar();
        jLabelLoading = new javax.swing.JLabel();
        jPanelHeader = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jPPGList = new javax.swing.JComboBox();
        jLabelLogo = new javax.swing.JLabel();
        jLabelSubLogo = new javax.swing.JLabel();
        jButtonCreateGroup = new javax.swing.JLabel();
        onOffButton = new org.jdesktop.swingx.JXImagePanel();
        jPanelScreen = new javax.swing.JPanel();
        jLabelHome = new javax.swing.JLabel();
        jLabelUsers = new javax.swing.JLabel();
        jLabelShares = new javax.swing.JLabel();
        jLabelChat = new javax.swing.JLabel();
        jLabelPeerings = new javax.swing.JLabel();
        jLabelSettings = new javax.swing.JLabel();
        jLabelLog = new javax.swing.JLabel();
        jMainPane = new javax.swing.JLayeredPane();
        jPanelHome = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jPanelInit = new javax.swing.JPanel();
        jLabelStep1 = new javax.swing.JLabel();
        jLabelStep1Desc = new javax.swing.JLabel();
        jStep1Status = new javax.swing.JLabel();
        jLabelStep2 = new javax.swing.JLabel();
        jLabelStep2Desc = new javax.swing.JLabel();
        jStep2Status = new javax.swing.JLabel();
        jStep3Status = new javax.swing.JLabel();
        jLabelStep3 = new javax.swing.JLabel();
        jLabelStep3Desc = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        nickName = new javax.swing.JTextField();
        jPanelShares = new javax.swing.JPanel();
        jTypeList = new javax.swing.JComboBox();
        jButtonSearchFile = new javax.swing.JButton();
        jSearchFile = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        mySearchTable = new org.jdesktop.swingx.JXTreeTable();
        jPanelUsers = new javax.swing.JPanel();
        jTextField3 = new javax.swing.JTextField();
        jButtonSendMsg = new javax.swing.JButton();
        jButtonSendFile = new javax.swing.JButton();
        jButtonSearchUser = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTableUser = new javax.swing.JTable();
        jPanelChat = new javax.swing.JPanel();
        jComboChatStatus = new javax.swing.JComboBox();
        jTextChatSend = new javax.swing.JTextField();
        jButtonChatSend = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextChatArea = new javax.swing.JTextArea();
        jLabel10 = new javax.swing.JLabel();
        jLabelNickName = new javax.swing.JLabel();
        jLabelChatRoom = new javax.swing.JLabel();
        jPanelPeerings = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane9 = new javax.swing.JScrollPane();
        downloadTable = new org.jdesktop.swingx.JXTreeTable();
        jScrollPane10 = new javax.swing.JScrollPane();
        uploadTable = new org.jdesktop.swingx.JXTreeTable();
        jPanelSettings = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        onOffRDV = new com.petersoft.advancedswing.onoffbutton.OnOffButton();
        onOffSharing = new com.petersoft.advancedswing.onoffbutton.OnOffButton();
        jLabel17 = new javax.swing.JLabel();
        jAddSharedDirectory = new javax.swing.JButton();
        btnReloadShare = new javax.swing.JButton();
        jLabelPath = new javax.swing.JLabel();
        jSharedPane = new javax.swing.JScrollPane();
        myLibrary = new org.jdesktop.swingx.JXTreeTable();
        jLabel18 = new javax.swing.JLabel();
        jPanelLog = new javax.swing.JPanel();
        jLogReset = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtLog = new javax.swing.JTextArea();
        jLogCopy = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();
        jSeparator3 = new javax.swing.JSeparator();
        jSeparator4 = new javax.swing.JSeparator();
        jSeparator5 = new javax.swing.JSeparator();
        jSeparator6 = new javax.swing.JSeparator();
        jLabelInfos = new javax.swing.JLabel();

        Disclaimer.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        Disclaimer.setTitle("Disclaimer");
        Disclaimer.setBackground(new java.awt.Color(240, 240, 240));
        Disclaimer.setLocation(new java.awt.Point(250, 250));
        Disclaimer.setModal(true);
        Disclaimer.setPreferredSize(new java.awt.Dimension(664, 406));
        Disclaimer.setSize(new java.awt.Dimension(664, 406));
        Disclaimer.setUndecorated(true);

        jHeaderAlert1.setBackground(new java.awt.Color(51, 51, 51));
        jHeaderAlert1.setForeground(new java.awt.Color(153, 153, 153));

        jLabel16.setFont(new java.awt.Font("Silom", 1, 40)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(0, 153, 0));
        jLabel16.setText(Kb00m.APP_NAME);
        jLabel16.setFocusable(false);
        jLabel16.setSize(new java.awt.Dimension(388, 52));

        jLabel19.setFont(new java.awt.Font("Monaco", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(153, 153, 153));
        jLabel19.setText(Kb00m.APP_DESC);
        jLabel19.setFocusable(false);

        org.jdesktop.layout.GroupLayout jHeaderAlert1Layout = new org.jdesktop.layout.GroupLayout(jHeaderAlert1);
        jHeaderAlert1.setLayout(jHeaderAlert1Layout);
        jHeaderAlert1Layout.setHorizontalGroup(
            jHeaderAlert1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jHeaderAlert1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 292, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(112, 112, 112))
            .add(jHeaderAlert1Layout.createSequentialGroup()
                .add(177, 177, 177)
                .add(jLabel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 316, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jHeaderAlert1Layout.setVerticalGroup(
            jHeaderAlert1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jHeaderAlert1Layout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .add(jLabel16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel19)
                .addContainerGap())
        );

        jPanel1.setBackground(new java.awt.Color(240, 240, 240));
        jPanel1.setPreferredSize(new java.awt.Dimension(664, 317));
        jPanel1.setSize(new java.awt.Dimension(0, 0));

        jPanelAlert.setBackground(new java.awt.Color(240, 240, 240));

        jTextArea4.setColumns(20);
        jTextArea4.setEditable(false);
        jTextArea4.setFont(new java.awt.Font("Lucida Grande", 0, 12)); // NOI18N
        jTextArea4.setLineWrap(true);
        jTextArea4.setRows(5);
        jTextArea4.setText("                                           PLEASE RESPECT COPYRIGHT POLICY\n\nBy clicking the agreement checkbox below you accept to endorse ALL responsabilities for what you're sharing. You either accept to be respectful amongs others while chating. Any aggressive, insultant or hateful comportment could lead to your exclusion of this service. \n       \t\nThe mainteners ARE NOT able to monitor what you share due to P2P architecture and encryption rules. So has the content can't be monitored the service is restricted to people OVER 18 YEARS OLD.\n\nBe careful, respect other privacy and rights. \n\t                                                                             ..:: HAPPY SHARING !! ::..");
        jTextArea4.setWrapStyleWord(true);
        jTextArea4.setFocusTraversalKeysEnabled(false);
        jTextArea4.setFocusable(false);
        jTextArea4.setRequestFocusEnabled(false);
        jTextArea4.setVerifyInputWhenFocusTarget(false);
        jScrollPane6.setViewportView(jTextArea4);

        jLabelAlert.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabelAlert.setForeground(new java.awt.Color(204, 0, 0));
        jLabelAlert.setText("!! WARNING !!");

        org.jdesktop.layout.GroupLayout jPanelAlertLayout = new org.jdesktop.layout.GroupLayout(jPanelAlert);
        jPanelAlert.setLayout(jPanelAlertLayout);
        jPanelAlertLayout.setHorizontalGroup(
            jPanelAlertLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelAlertLayout.createSequentialGroup()
                .add(jPanelAlertLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelAlertLayout.createSequentialGroup()
                        .add(195, 195, 195)
                        .add(jLabelAlert)
                        .add(0, 259, Short.MAX_VALUE))
                    .add(jPanelAlertLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jScrollPane6, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 641, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelAlertLayout.setVerticalGroup(
            jPanelAlertLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelAlertLayout.createSequentialGroup()
                .add(jLabelAlert)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 184, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jButtonCancel.setText("EXIT");
        jButtonCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelActionPerformed(evt);
            }
        });

        jButtonStart.setText("START");
        jButtonStart.setEnabled(false);
        jButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonStartActionPerformed(evt);
            }
        });

        jCheckBoxAcceptDisclaimer.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jCheckBoxAcceptDisclaimer.setText("I accept this Terms and Conditions.");
        jCheckBoxAcceptDisclaimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAcceptDisclaimerActionPerformed(evt);
            }
        });

        jCheckBoxAcceptAdult.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jCheckBoxAcceptAdult.setText("I certify to be over the adult legal age in my country's law.");
        jCheckBoxAcceptAdult.setEnabled(false);
        jCheckBoxAcceptAdult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAcceptAdultActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jButtonCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 84, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jButtonStart)
                .add(29, 29, 29))
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jCheckBoxAcceptAdult)
                        .add(jCheckBoxAcceptDisclaimer)
                        .add(jPanelAlert, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(281, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(286, Short.MAX_VALUE)
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jButtonCancel)
                    .add(jButtonStart))
                .add(26, 26, 26))
            .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .add(jPanelAlert, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jCheckBoxAcceptDisclaimer)
                    .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                    .add(jCheckBoxAcceptAdult)
                    .addContainerGap(41, Short.MAX_VALUE)))
        );

        org.jdesktop.layout.GroupLayout DisclaimerLayout = new org.jdesktop.layout.GroupLayout(Disclaimer.getContentPane());
        Disclaimer.getContentPane().setLayout(DisclaimerLayout);
        DisclaimerLayout.setHorizontalGroup(
            DisclaimerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jHeaderAlert1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanel1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 664, Short.MAX_VALUE)
        );
        DisclaimerLayout.setVerticalGroup(
            DisclaimerLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(DisclaimerLayout.createSequentialGroup()
                .add(jHeaderAlert1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 341, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        jDialogCustomGroup.setTitle("Private Group Creation");
        jDialogCustomGroup.setLocation(new java.awt.Point(300, 300));
        jDialogCustomGroup.setName("customGroupCreation");
        jDialogCustomGroup.setResizable(false);
        jDialogCustomGroup.setSize(new java.awt.Dimension(525, 290));
        jDialogCustomGroup.setUndecorated(true);

        jHeaderAlert2.setBackground(new java.awt.Color(51, 51, 51));
        jHeaderAlert2.setForeground(new java.awt.Color(153, 153, 153));

        jLabel20.setFont(new java.awt.Font("Silom", 1, 40)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 153, 0));
        jLabel20.setText(Kb00m.APP_NAME);
        jLabel20.setFocusable(false);

        jLabel21.setFont(new java.awt.Font("Monaco", 1, 12)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(153, 153, 153));
        jLabel21.setText(Kb00m.APP_DESC);
        jLabel21.setFocusable(false);

        org.jdesktop.layout.GroupLayout jHeaderAlert2Layout = new org.jdesktop.layout.GroupLayout(jHeaderAlert2);
        jHeaderAlert2.setLayout(jHeaderAlert2Layout);
        jHeaderAlert2Layout.setHorizontalGroup(
            jHeaderAlert2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jHeaderAlert2Layout.createSequentialGroup()
                .add(115, 115, 115)
                .add(jLabel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 282, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jHeaderAlert2Layout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabel21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 292, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(59, 59, 59))
        );
        jHeaderAlert2Layout.setVerticalGroup(
            jHeaderAlert2Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jHeaderAlert2Layout.createSequentialGroup()
                .addContainerGap(24, Short.MAX_VALUE)
                .add(jLabel20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 37, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabel21)
                .addContainerGap())
        );

        label1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        label1.setText("You want to create a private group, it needs some information:\n");

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel1.setText("Group Security");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel2.setText("Group Name");

        jCustomGroupTitle.setFont(new java.awt.Font("Lucida Grande", 2, 12)); // NOI18N
        jCustomGroupTitle.setForeground(new java.awt.Color(102, 102, 102));
        jCustomGroupTitle.setText("Enter a group name");
        jCustomGroupTitle.setToolTipText("Enter the group name");
        jCustomGroupTitle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCustomGroupTitleActionPerformed(evt);
            }
        });

        jCustomGroupSecurity.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jCustomGroupSecurity.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Open (need to know the GroupName)", "Password Protected", "Certificate Protected" }));
        jCustomGroupSecurity.setToolTipText("Group Security Policy");

        jCustomGroupCreate.setText("CREATE");
        jCustomGroupCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCustomGroupCreateActionPerformed(evt);
            }
        });

        jButton3.setText("CANCEL");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jLabel22.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel22.setText("Publish Group ?");

        onOffPublish.setSelected(true);
        onOffPublish.setText("PublishGroup");
        onOffPublish.setToolTipText("Publicly publish your group");

        org.jdesktop.layout.GroupLayout jDialogCustomGroupLayout = new org.jdesktop.layout.GroupLayout(jDialogCustomGroup.getContentPane());
        jDialogCustomGroup.getContentPane().setLayout(jDialogCustomGroupLayout);
        jDialogCustomGroupLayout.setHorizontalGroup(
            jDialogCustomGroupLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jHeaderAlert2, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(jDialogCustomGroupLayout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jDialogCustomGroupLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(jDialogCustomGroupLayout.createSequentialGroup()
                        .add(jButton3)
                        .add(18, 18, 18)
                        .add(jCustomGroupCreate))
                    .add(jDialogCustomGroupLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(label1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jDialogCustomGroupLayout.createSequentialGroup()
                            .add(jDialogCustomGroupLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jDialogCustomGroupLayout.createSequentialGroup()
                                    .add(jDialogCustomGroupLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                        .add(jDialogCustomGroupLayout.createSequentialGroup()
                                            .add(31, 31, 31)
                                            .add(jLabel22))
                                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jLabel1))
                                    .add(18, 18, 18))
                                .add(org.jdesktop.layout.GroupLayout.TRAILING, jDialogCustomGroupLayout.createSequentialGroup()
                                    .add(jLabel2)
                                    .add(22, 22, 22)))
                            .add(jDialogCustomGroupLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                .add(jDialogCustomGroupLayout.createSequentialGroup()
                                    .add(6, 6, 6)
                                    .add(jCustomGroupTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 175, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                                .add(jCustomGroupSecurity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                .add(jDialogCustomGroupLayout.createSequentialGroup()
                                    .add(11, 11, 11)
                                    .add(onOffPublish, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 62, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        jDialogCustomGroupLayout.setVerticalGroup(
            jDialogCustomGroupLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jDialogCustomGroupLayout.createSequentialGroup()
                .add(jHeaderAlert2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(20, 20, 20)
                .add(label1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jDialogCustomGroupLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jCustomGroupSecurity, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jDialogCustomGroupLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel2)
                    .add(jCustomGroupTitle, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(jDialogCustomGroupLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel22)
                    .add(onOffPublish, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 7, Short.MAX_VALUE)
                .add(jDialogCustomGroupLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jCustomGroupCreate)
                    .add(jButton3))
                .add(20, 20, 20))
        );

        jLoading.setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        jLoading.setTitle("Custom Group Creation");
        jLoading.setAlwaysOnTop(true);
        jLoading.setBackground(new java.awt.Color(204, 204, 204));
        jLoading.setBounds(new java.awt.Rectangle(300, 200, 305, 90));
        jLoading.setFocusCycleRoot(false);
        jLoading.setFocusTraversalKeysEnabled(false);
        jLoading.setFocusable(false);
        jLoading.setResizable(false);

        jProgressLoading.setOpaque(true);
        jProgressLoading.setStringPainted(true);

        jLabelLoading.setText("Please wait searching for group ...");

        org.jdesktop.layout.GroupLayout jLoadingLayout = new org.jdesktop.layout.GroupLayout(jLoading.getContentPane());
        jLoading.getContentPane().setLayout(jLoadingLayout);
        jLoadingLayout.setHorizontalGroup(
            jLoadingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jLoadingLayout.createSequentialGroup()
                .add(30, 30, 30)
                .add(jLoadingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabelLoading)
                    .add(jProgressLoading, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 248, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );
        jLoadingLayout.setVerticalGroup(
            jLoadingLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jLoadingLayout.createSequentialGroup()
                .addContainerGap(12, Short.MAX_VALUE)
                .add(jLabelLoading)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jProgressLoading, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(30, 30, 30))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("..:: "+Kb00m.APP_NAME+" ::..");
        setBackground(new java.awt.Color(235, 240, 250));
        setLocation(new java.awt.Point(200, 200));
        setPreferredSize(new java.awt.Dimension(880, 523));
        setSize(new java.awt.Dimension(880, 523));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
        });

        jPanelHeader.setBackground(new java.awt.Color(51, 51, 51));

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Current P2P Group");

        jPPGList.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jPPGList.setMaximumRowCount(10);
        jPPGList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "-- Select a Group --" }));
        jPPGList.setToolTipText("Private Group List");
        jPPGList.setAutoscrolls(true);
        jPPGList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jPPGListItemStateChanged(evt);
            }
        });

        jLabelLogo.setFont(new java.awt.Font("Silom", 1, 40)); // NOI18N
        jLabelLogo.setForeground(new java.awt.Color(0, 153, 0));
        jLabelLogo.setText(Kb00m.APP_NAME);
        jLabelLogo.setFocusable(false);

        jLabelSubLogo.setFont(new java.awt.Font("Monaco", 1, 12)); // NOI18N
        jLabelSubLogo.setForeground(new java.awt.Color(153, 153, 153));
        jLabelSubLogo.setText(Kb00m.APP_DESC);
        jLabelSubLogo.setFocusable(false);

        jButtonCreateGroup.setFont(new java.awt.Font("Impact", 1, 24)); // NOI18N
        jButtonCreateGroup.setForeground(new java.awt.Color(255, 255, 255));
        jButtonCreateGroup.setText("+");
        jButtonCreateGroup.setEnabled(false);
        jButtonCreateGroup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonCreateGroupMouseClicked(evt);
            }
        });

        onOffButton.setBackground(new java.awt.Color(51, 51, 51));
        onOffButton.setToolTipText("Connect / Disconnect");
        onOffButton.setEnabled(false);
        onOffButton.setFocusable(false);
        onOffButton.setMaximumSize(new java.awt.Dimension(25, 25));
        onOffButton.setMinimumSize(new java.awt.Dimension(10, 10));
        onOffButton.setPreferredSize(new java.awt.Dimension(25, 25));
        onOffButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onOffButtonMouseClicked(evt);
            }
        });

        org.jdesktop.layout.GroupLayout onOffButtonLayout = new org.jdesktop.layout.GroupLayout(onOffButton);
        onOffButton.setLayout(onOffButtonLayout);
        onOffButtonLayout.setHorizontalGroup(
            onOffButtonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 25, Short.MAX_VALUE)
        );
        onOffButtonLayout.setVerticalGroup(
            onOffButtonLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(0, 25, Short.MAX_VALUE)
        );

        org.jdesktop.layout.GroupLayout jPanelHeaderLayout = new org.jdesktop.layout.GroupLayout(jPanelHeader);
        jPanelHeader.setLayout(jPanelHeaderLayout);
        jPanelHeaderLayout.setHorizontalGroup(
            jPanelHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelHeaderLayout.createSequentialGroup()
                .add(14, 14, 14)
                .add(jPanelHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelHeaderLayout.createSequentialGroup()
                        .add(jPPGList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 221, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonCreateGroup)
                        .add(176, 176, 176)
                        .add(jLabelSubLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 292, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jPanelHeaderLayout.createSequentialGroup()
                        .add(9, 9, 9)
                        .add(jLabel4)
                        .add(123, 123, 123)
                        .add(jLabelLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 307, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .add(71, 71, 71)
                .add(onOffButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(62, 62, 62))
        );
        jPanelHeaderLayout.setVerticalGroup(
            jPanelHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelHeaderLayout.createSequentialGroup()
                .add(jPanelHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelHeaderLayout.createSequentialGroup()
                        .add(41, 41, 41)
                        .add(onOffButton, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18))
                    .add(jPanelHeaderLayout.createSequentialGroup()
                        .add(8, 8, 8)
                        .add(jPanelHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel4)
                            .add(jLabelLogo, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 43, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jPanelHeaderLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPPGList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabelSubLogo)
                            .add(jButtonCreateGroup, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 27, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))))
                .add(21, 21, 21))
        );

        jPanelScreen.setBackground(new java.awt.Color(240, 240, 240));
        jPanelScreen.setPreferredSize(new java.awt.Dimension(880, 406));
        jPanelScreen.setSize(new java.awt.Dimension(880, 406));

        jLabelHome.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabelHome.setForeground(new java.awt.Color(255, 255, 255));
        jLabelHome.setText("Home");
        jLabelHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelHomeMouseClicked(evt);
            }
        });

        jLabelUsers.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelUsers.setForeground(new java.awt.Color(51, 51, 51));
        jLabelUsers.setText("USERS");
        jLabelUsers.setEnabled(false);
        jLabelUsers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelUsersMouseClicked(evt);
            }
        });

        jLabelShares.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelShares.setForeground(new java.awt.Color(51, 51, 51));
        jLabelShares.setText("SHARES");
        jLabelShares.setEnabled(false);
        jLabelShares.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelSharesMouseClicked(evt);
            }
        });

        jLabelChat.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelChat.setForeground(new java.awt.Color(51, 51, 51));
        jLabelChat.setText("CHAT");
        jLabelChat.setEnabled(false);
        jLabelChat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelChatMouseClicked(evt);
            }
        });

        jLabelPeerings.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelPeerings.setForeground(new java.awt.Color(51, 51, 51));
        jLabelPeerings.setText("PEERINGS");
        jLabelPeerings.setEnabled(false);
        jLabelPeerings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelPeeringsMouseClicked(evt);
            }
        });

        jLabelSettings.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelSettings.setForeground(new java.awt.Color(51, 51, 51));
        jLabelSettings.setText("SETTINGS");
        jLabelSettings.setEnabled(false);
        jLabelSettings.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelSettingsMouseClicked(evt);
            }
        });

        jLabelLog.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelLog.setForeground(new java.awt.Color(51, 51, 51));
        jLabelLog.setText("LOGS");
        jLabelLog.setEnabled(false);
        jLabelLog.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabelLogMouseClicked(evt);
            }
        });

        jMainPane.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanelHome.setBackground(new java.awt.Color(240, 240, 240));
        jPanelHome.setMinimumSize(new java.awt.Dimension(730, 380));
        jPanelHome.setPreferredSize(new java.awt.Dimension(670, 390));

        jLabel13.setFont(new java.awt.Font("Lucida Grande", 1, 36)); // NOI18N
        jLabel13.setText("WELCOME !!");

        jScrollPane4.setBackground(new java.awt.Color(238, 238, 238));
        jScrollPane4.setBorder(null);
        jScrollPane4.setOpaque(false);

        jTextArea3.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea3.setColumns(20);
        jTextArea3.setEditable(false);
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(5);
        jTextArea3.setText("YOU'RE NOW CONNECTED to the b00m world, you'll find here some ressources publicly accessible, and some others privatly shared.\n\nPlease try to keep your copyrighted files appart from the default, widly open, group sharing (b00m). The ability to propose only free-copyright documents openly, will be directly link with the duration of this service... Please don't dig your own hole!!\n\nInstead of that, consider creating your own protected group if you want to share things with several people, or ask to join a preexistant one via the \"chat\" menu.\nIf you just want to send a message/file to a very specific person you can do this throught the \"users\" menu.\n\nThis can be a greatful way to exchange anonymously and securely some files and messages... (R&D departments should be glad ;))\n\nAnd a lot of other features, all spyware/malware/ads free !!                 \n\n\t\t\t\t        ..:: HAPPY SHARING ::..");
        jTextArea3.setWrapStyleWord(true);
        jTextArea3.setOpaque(false);
        jScrollPane4.setViewportView(jTextArea3);

        org.jdesktop.layout.GroupLayout jPanelHomeLayout = new org.jdesktop.layout.GroupLayout(jPanelHome);
        jPanelHome.setLayout(jPanelHomeLayout);
        jPanelHomeLayout.setHorizontalGroup(
            jPanelHomeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelHomeLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .add(jPanelHomeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabel13)
                    .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 723, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelHomeLayout.setVerticalGroup(
            jPanelHomeLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelHomeLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabel13)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 303, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        jPanelHome.setBounds(0, 0, 750, 370);
        jMainPane.add(jPanelHome, javax.swing.JLayeredPane.DEFAULT_LAYER);
        this.setVisible(false);

        jPanelInit.setBackground(new java.awt.Color(240, 240, 240));
        jPanelInit.setPreferredSize(new java.awt.Dimension(730, 380));

        jLabelStep1.setText("1. Please select a directory where to install... ");

        jLabelStep1Desc.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabelStep1Desc.setForeground(new java.awt.Color(51, 51, 51));
        jLabelStep1Desc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelStep1Desc.setText("Will be used to store Downloaded/Shared files");

        jStep1Status.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jStep1Status.setForeground(new java.awt.Color(0, 102, 0));
        jStep1Status.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/verifyIcon.png"))); // NOI18N
        jStep1Status.setDoubleBuffered(true);
        jStep1Status.setEnabled(false);
        jStep1Status.setFocusable(false);

        jLabelStep2.setText("2. Enter your session nickname....                              ");
        jLabelStep2.setEnabled(false);
        jLabelStep2.setFocusable(false);

        jLabelStep2Desc.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabelStep2Desc.setForeground(new java.awt.Color(51, 51, 51));
        jLabelStep2Desc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelStep2Desc.setText("Press Enter key to continue");
        jLabelStep2Desc.setEnabled(false);
        jLabelStep2Desc.setFocusable(false);

        jStep2Status.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jStep2Status.setForeground(new java.awt.Color(0, 102, 0));
        jStep2Status.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/verifyIcon.png"))); // NOI18N
        jStep2Status.setDoubleBuffered(true);
        jStep2Status.setEnabled(false);
        jStep2Status.setFocusable(false);

        jStep3Status.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        jStep3Status.setForeground(new java.awt.Color(0, 102, 0));
        jStep3Status.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/verifyIcon.png"))); // NOI18N
        jStep3Status.setToolTipText("Step 3");
        jStep3Status.setDoubleBuffered(true);
        jStep3Status.setEnabled(false);
        jStep3Status.setFocusable(false);

        jLabelStep3.setText("3. Launch JXTA Network...                              ");
        jLabelStep3.setEnabled(false);
        jLabelStep3.setFocusable(false);

        jLabelStep3Desc.setFont(new java.awt.Font("Lucida Grande", 2, 10)); // NOI18N
        jLabelStep3Desc.setForeground(new java.awt.Color(51, 51, 51));
        jLabelStep3Desc.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabelStep3Desc.setText("Reaching rendez-vous point / joining "+Core.MAINGROUP_NAME+"...");
        jLabelStep3Desc.setEnabled(false);
        jLabelStep3Desc.setFocusable(false);

        jLabel12.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 0, 0));
        jLabel12.setText("This is the first time you launch Kb00m");

        nickName.setText("anonymous");
        nickName.setToolTipText("Session nickname");
        nickName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nickNameKeyPressed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanelInitLayout = new org.jdesktop.layout.GroupLayout(jPanelInit);
        jPanelInit.setLayout(jPanelInitLayout);
        jPanelInitLayout.setHorizontalGroup(
            jPanelInitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelInitLayout.createSequentialGroup()
                .add(175, 175, 175)
                .add(jLabel12)
                .addContainerGap())
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelInitLayout.createSequentialGroup()
                .add(jPanelInitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelInitLayout.createSequentialGroup()
                        .add(jPanelInitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jPanelInitLayout.createSequentialGroup()
                                .add(78, 78, 78)
                                .add(jLabelStep1Desc))
                            .add(jPanelInitLayout.createSequentialGroup()
                                .add(64, 64, 64)
                                .add(jPanelInitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                                    .add(jLabelStep3)
                                    .add(jLabelStep1)
                                    .add(jPanelInitLayout.createSequentialGroup()
                                        .add(16, 16, 16)
                                        .add(jLabelStep2Desc))
                                    .add(jPanelInitLayout.createSequentialGroup()
                                        .add(jLabelStep2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 236, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                                        .add(18, 18, 18)
                                        .add(nickName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 128, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))))
                        .add(174, 174, 174))
                    .add(jPanelInitLayout.createSequentialGroup()
                        .add(78, 78, 78)
                        .add(jLabelStep3Desc, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 231, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .add(jPanelInitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(jStep1Status)
                    .add(jPanelInitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(jStep2Status)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jStep3Status)))
                .add(233, 233, 233))
        );
        jPanelInitLayout.setVerticalGroup(
            jPanelInitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelInitLayout.createSequentialGroup()
                .add(16, 16, 16)
                .add(jLabel12)
                .add(32, 32, 32)
                .add(jPanelInitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelInitLayout.createSequentialGroup()
                        .add(jLabelStep1)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabelStep1Desc))
                    .add(jStep1Status))
                .add(44, 44, 44)
                .add(jPanelInitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelInitLayout.createSequentialGroup()
                        .add(9, 9, 9)
                        .add(jStep2Status))
                    .add(jPanelInitLayout.createSequentialGroup()
                        .add(jPanelInitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabelStep2)
                            .add(nickName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabelStep2Desc)))
                .add(6, 6, 6)
                .add(jPanelInitLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelInitLayout.createSequentialGroup()
                        .add(49, 49, 49)
                        .add(jStep3Status))
                    .add(jPanelInitLayout.createSequentialGroup()
                        .add(40, 40, 40)
                        .add(jLabelStep3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLabelStep3Desc)))
                .addContainerGap(93, Short.MAX_VALUE))
        );

        jPanelInit.setBounds(0, 0, 760, 370);
        jMainPane.add(jPanelInit, javax.swing.JLayeredPane.DEFAULT_LAYER);
        this.setVisible(false);

        jPanelShares.setBackground(new java.awt.Color(240, 240, 240));
        jPanelShares.setMinimumSize(new java.awt.Dimension(730, 380));
        jPanelShares.setPreferredSize(new java.awt.Dimension(730, 380));

        jTypeList.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTypeList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "All", "Video", "Music", "Picture", "ISO", "Text", "Other" }));
        jTypeList.setSelectedItem("All");
        jTypeList.setToolTipText("Category restriction");

        jButtonSearchFile.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jButtonSearchFile.setText("Search");
        jButtonSearchFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchFileActionPerformed(evt);
            }
        });

        jSearchFile.setFont(new java.awt.Font("Monaco", 2, 10)); // NOI18N
        jSearchFile.setText("Search File");
        jSearchFile.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jSearchFileKeyPressed(evt);
            }
        });

        mySearchTable.setClosedIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/folderIcon.png"))); // NOI18N
        mySearchTable.setCollapsedIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/folderIcon.png"))); // NOI18N
        mySearchTable.setExpandedIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/folderIcon.png"))); // NOI18N
        mySearchTable.setLeafIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/leaf.png"))); // NOI18N
        mySearchTable.setOpenIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/folderIcon.png"))); // NOI18N
        jScrollPane2.setViewportView(mySearchTable);

        org.jdesktop.layout.GroupLayout jPanelSharesLayout = new org.jdesktop.layout.GroupLayout(jPanelShares);
        jPanelShares.setLayout(jPanelSharesLayout);
        jPanelSharesLayout.setHorizontalGroup(
            jPanelSharesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelSharesLayout.createSequentialGroup()
                .add(18, 18, 18)
                .add(jPanelSharesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane2)
                    .add(jPanelSharesLayout.createSequentialGroup()
                        .add(jTypeList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 98, Short.MAX_VALUE)
                        .add(jSearchFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 423, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jButtonSearchFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 75, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelSharesLayout.setVerticalGroup(
            jPanelSharesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelSharesLayout.createSequentialGroup()
                .add(23, 23, 23)
                .add(jPanelSharesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jTypeList, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jPanelSharesLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                        .add(org.jdesktop.layout.GroupLayout.TRAILING, jButtonSearchFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 26, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(jPanelSharesLayout.createSequentialGroup()
                            .add(jSearchFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(1, 1, 1))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 315, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(9, Short.MAX_VALUE))
        );

        jPanelShares.setBounds(0, 0, 750, 370);
        jMainPane.add(jPanelShares, javax.swing.JLayeredPane.DEFAULT_LAYER);
        this.setVisible(false);

        jPanelUsers.setBackground(new java.awt.Color(240, 240, 240));
        jPanelUsers.setMinimumSize(new java.awt.Dimension(0, 0));
        jPanelUsers.setPreferredSize(new java.awt.Dimension(730, 380));

        jTextField3.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N

        jButtonSendMsg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Various/msg.gif"))); // NOI18N
        jButtonSendMsg.setToolTipText("Send Message");
        jButtonSendMsg.setEnabled(false);
        jButtonSendMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendMsgActionPerformed(evt);
            }
        });

        jButtonSendFile.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Large/saveIcon.png"))); // NOI18N
        jButtonSendFile.setToolTipText("Send File");
        jButtonSendFile.setEnabled(false);
        jButtonSendFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSendFileActionPerformed(evt);
            }
        });

        jButtonSearchUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Large/searchIcon2.png"))); // NOI18N
        jButtonSearchUser.setToolTipText("Search user");
        jButtonSearchUser.setEnabled(false);

        jScrollPane5.setFocusable(false);

        jTableUser.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTableUser.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jTableUser.setEnabled(false);
        jScrollPane5.setViewportView(jTableUser);

        org.jdesktop.layout.GroupLayout jPanelUsersLayout = new org.jdesktop.layout.GroupLayout(jPanelUsers);
        jPanelUsers.setLayout(jPanelUsersLayout);
        jPanelUsersLayout.setHorizontalGroup(
            jPanelUsersLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelUsersLayout.createSequentialGroup()
                .add(23, 23, 23)
                .add(jPanelUsersLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelUsersLayout.createSequentialGroup()
                        .add(jTextField3)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jButtonSearchUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 32, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane5, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(jPanelUsersLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jButtonSendMsg, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonSendFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 30, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(25, 25, 25))
        );
        jPanelUsersLayout.setVerticalGroup(
            jPanelUsersLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelUsersLayout.createSequentialGroup()
                .add(22, 22, 22)
                .add(jPanelUsersLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jTextField3)
                    .add(jButtonSearchUser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .add(18, 18, 18)
                .add(jPanelUsersLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelUsersLayout.createSequentialGroup()
                        .add(jButtonSendMsg, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(jButtonSendFile, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jScrollPane5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 302, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(1, Short.MAX_VALUE))
        );

        jPanelUsers.setBounds(0, 0, 750, 370);
        jMainPane.add(jPanelUsers, javax.swing.JLayeredPane.DEFAULT_LAYER);
        this.setVisible(false);

        jPanelChat.setBackground(new java.awt.Color(240, 240, 240));
        jPanelChat.setPreferredSize(new java.awt.Dimension(730, 380));
        jPanelChat.setRequestFocusEnabled(false);

        jComboChatStatus.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jComboChatStatus.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "OnLine", "BackSoon", "Busy", "Away", "OffLine" }));
        jComboChatStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboChatStatusActionPerformed(evt);
            }
        });

        jTextChatSend.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextChatSend.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextChatSendKeyPressed(evt);
            }
        });

        jButtonChatSend.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jButtonChatSend.setText("send");
        jButtonChatSend.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonChatSendMouseClicked(evt);
            }
        });

        jTextChatArea.setColumns(20);
        jTextChatArea.setEditable(false);
        jTextChatArea.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jTextChatArea.setRows(5);
        jTextChatArea.setFocusable(false);
        jScrollPane3.setViewportView(jTextChatArea);

        jLabel10.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel10.setText("Status:");

        jLabelNickName.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelNickName.setText("NICKNAME");

        jLabelChatRoom.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabelChatRoom.setText("@");

        org.jdesktop.layout.GroupLayout jPanelChatLayout = new org.jdesktop.layout.GroupLayout(jPanelChat);
        jPanelChat.setLayout(jPanelChatLayout);
        jPanelChatLayout.setHorizontalGroup(
            jPanelChatLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelChatLayout.createSequentialGroup()
                .add(25, 25, 25)
                .add(jPanelChatLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelChatLayout.createSequentialGroup()
                        .add(jLabelNickName)
                        .add(90, 90, 90)
                        .add(jLabelChatRoom)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(jLabel10)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboChatStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 124, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(27, 27, 27))
                    .add(jPanelChatLayout.createSequentialGroup()
                        .add(jPanelChatLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                            .add(org.jdesktop.layout.GroupLayout.LEADING, jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 702, Short.MAX_VALUE)
                            .add(jPanelChatLayout.createSequentialGroup()
                                .add(jTextChatSend)
                                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                                .add(jButtonChatSend)))
                        .add(23, 23, 23))))
        );
        jPanelChatLayout.setVerticalGroup(
            jPanelChatLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelChatLayout.createSequentialGroup()
                .add(12, 12, 12)
                .add(jPanelChatLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboChatStatus, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabel10)
                    .add(jLabelNickName)
                    .add(jLabelChatRoom))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane3, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 272, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanelChatLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextChatSend, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jButtonChatSend))
                .add(18, 18, 18))
        );

        jPanelChat.setBounds(0, 0, 750, 370);
        jMainPane.add(jPanelChat, javax.swing.JLayeredPane.DEFAULT_LAYER);
        this.setVisible(false);

        jPanelPeerings.setBackground(new java.awt.Color(240, 240, 240));
        jPanelPeerings.setMinimumSize(new java.awt.Dimension(730, 391));
        jPanelPeerings.setPreferredSize(new java.awt.Dimension(730, 380));

        jLabel15.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel15.setText("UP:              kbps                                             DOWN:          kbps");

        jScrollPane9.setViewportView(downloadTable);

        jTabbedPane1.addTab("Download", jScrollPane9);

        jScrollPane10.setViewportView(uploadTable);

        jTabbedPane1.addTab("Upload", jScrollPane10);

        org.jdesktop.layout.GroupLayout jPanelPeeringsLayout = new org.jdesktop.layout.GroupLayout(jPanelPeerings);
        jPanelPeerings.setLayout(jPanelPeeringsLayout);
        jPanelPeeringsLayout.setHorizontalGroup(
            jPanelPeeringsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelPeeringsLayout.createSequentialGroup()
                .add(jPanelPeeringsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelPeeringsLayout.createSequentialGroup()
                        .add(113, 113, 113)
                        .add(jLabel15, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 414, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 217, Short.MAX_VALUE))
                    .add(jPanelPeeringsLayout.createSequentialGroup()
                        .addContainerGap()
                        .add(jTabbedPane1)))
                .addContainerGap())
        );
        jPanelPeeringsLayout.setVerticalGroup(
            jPanelPeeringsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelPeeringsLayout.createSequentialGroup()
                .add(15, 15, 15)
                .add(jLabel15)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jTabbedPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.getAccessibleContext().setAccessibleName("Upload\n");

        jPanelPeerings.setBounds(0, 0, 750, 370);
        jMainPane.add(jPanelPeerings, javax.swing.JLayeredPane.DEFAULT_LAYER);
        this.setVisible(false);

        jPanelSettings.setBackground(new java.awt.Color(240, 240, 240));
        jPanelSettings.setPreferredSize(new java.awt.Dimension(730, 380));
        jPanelSettings.setVerifyInputWhenFocusTarget(false);

        jLabel14.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel14.setText("Become auto-RDV");

        onOffRDV.setSelected(true);
        onOffRDV.setText("onOffButton1");
        onOffRDV.setToolTipText("Let us Become a Rendez-Vous Point...\nTHE MORE PEOPLE BECOME RENDEZ-VOUS\nTHE FASTEST NETWORK GOES...\nIf you decide to help on this, Please\nnote that you have to open your port\non your firewall in order to access your computer\nfrom outside...\nMore information about this on:\nhttp://www.b00m.me/kb00m");

        onOffSharing.setSelected(true);
        onOffSharing.setText("onOffButton1");
        onOffSharing.setToolTipText("Allow sharing Files");

        jLabel17.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel17.setText("Start Sharing");

        jAddSharedDirectory.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jAddSharedDirectory.setText("Add Shared Directory");
        jAddSharedDirectory.setToolTipText("Add a new directory to share");
        jAddSharedDirectory.setEnabled(false);
        jAddSharedDirectory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jAddSharedDirectoryActionPerformed(evt);
            }
        });

        btnReloadShare.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Large/settingIcon.png"))); // NOI18N
        btnReloadShare.setMnemonic('R');
        btnReloadShare.setToolTipText("Refresh Shared Directory Listing.");
        btnReloadShare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReloadShareActionPerformed(evt);
            }
        });

        jLabelPath.setFont(new java.awt.Font("Lucida Grande", 3, 10)); // NOI18N
        jLabelPath.setForeground(new java.awt.Color(51, 51, 51));
        jLabelPath.setText("SHARED/PATH");

        jSharedPane.setAutoscrolls(true);
        jSharedPane.setFocusable(false);
        jSharedPane.setName("Library");
        jSharedPane.setOpaque(false);
        jSharedPane.setPreferredSize(new java.awt.Dimension(800, 300));
        jSharedPane.setSize(new java.awt.Dimension(200, 10000));

        myLibrary.setToolTipText("Shared Library");
        myLibrary.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        myLibrary.setClosedIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/folderIcon.png"))); // NOI18N
        myLibrary.setCollapsedIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/folderIcon.png"))); // NOI18N
        myLibrary.setEditable(false);
        myLibrary.setExpandedIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/folderIcon.png"))); // NOI18N
        myLibrary.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        myLibrary.setLargeModel(true);
        myLibrary.setLeafIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/leaf.png"))); // NOI18N
        myLibrary.setOpenIcon(new javax.swing.ImageIcon(getClass().getResource("/Picts/Small/folderIcon.png"))); // NOI18N
        myLibrary.setSortable(true);
        jSharedPane.setViewportView(myLibrary);

        jLabel18.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabel18.setText("Download Directory");

        org.jdesktop.layout.GroupLayout jPanelSettingsLayout = new org.jdesktop.layout.GroupLayout(jPanelSettings);
        jPanelSettings.setLayout(jPanelSettingsLayout);
        jPanelSettingsLayout.setHorizontalGroup(
            jPanelSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelSettingsLayout.createSequentialGroup()
                .add(24, 24, 24)
                .add(jPanelSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelSettingsLayout.createSequentialGroup()
                        .add(jPanelSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabel14)
                            .add(jLabel17))
                        .add(43, 43, 43)
                        .add(jPanelSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                            .add(onOffRDV, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 65, Short.MAX_VALUE)
                            .add(onOffSharing, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelSettingsLayout.createSequentialGroup()
                        .add(jLabel18)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                        .add(jLabelPath, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 274, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 89, Short.MAX_VALUE)
                        .add(jAddSharedDirectory)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(btnReloadShare, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(20, 20, 20))))
            .add(jPanelSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .add(jSharedPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelSettingsLayout.setVerticalGroup(
            jPanelSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(jPanelSettingsLayout.createSequentialGroup()
                        .add(jLabel17)
                        .add(18, 18, 18)
                        .add(jLabel14))
                    .add(jPanelSettingsLayout.createSequentialGroup()
                        .add(onOffSharing, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 16, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(18, 18, 18)
                        .add(onOffRDV, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .add(jPanelSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelSettingsLayout.createSequentialGroup()
                        .add(14, 14, 14)
                        .add(jPanelSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(btnReloadShare, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 25, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jAddSharedDirectory, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 29, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                    .add(jPanelSettingsLayout.createSequentialGroup()
                        .add(18, 18, 18)
                        .add(jPanelSettingsLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                            .add(jLabel18)
                            .add(jLabelPath))))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jSharedPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 259, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanelSettings.setBounds(0, 0, 750, 370);
        jMainPane.add(jPanelSettings, javax.swing.JLayeredPane.DEFAULT_LAYER);
        this.setVisible(false);

        jPanelLog.setBackground(new java.awt.Color(240, 240, 240));
        jPanelLog.setPreferredSize(new java.awt.Dimension(730, 380));

        jLogReset.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLogReset.setText("clear");
        jLogReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLogResetActionPerformed(evt);
            }
        });

        jScrollPane1.setAutoscrolls(true);

        txtLog.setColumns(20);
        txtLog.setEditable(false);
        txtLog.setFont(new java.awt.Font("Monaco", 1, 10)); // NOI18N
        txtLog.setLineWrap(true);
        txtLog.setRows(5);
        txtLog.setWrapStyleWord(true);
        txtLog.setFocusable(false);
        jScrollPane1.setViewportView(txtLog);

        jLogCopy.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLogCopy.setText("copy");
        jLogCopy.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jLogCopyActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout jPanelLogLayout = new org.jdesktop.layout.GroupLayout(jPanelLog);
        jPanelLog.setLayout(jPanelLogLayout);
        jPanelLogLayout.setHorizontalGroup(
            jPanelLogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelLogLayout.createSequentialGroup()
                .addContainerGap()
                .add(jPanelLogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelLogLayout.createSequentialGroup()
                        .add(0, 565, Short.MAX_VALUE)
                        .add(jLogCopy)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jLogReset)
                        .add(23, 23, 23))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelLogLayout.createSequentialGroup()
                        .add(jScrollPane1)
                        .addContainerGap())))
        );
        jPanelLogLayout.setVerticalGroup(
            jPanelLogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelLogLayout.createSequentialGroup()
                .addContainerGap()
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jPanelLogLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLogReset)
                    .add(jLogCopy))
                .addContainerGap())
        );

        jPanelLog.setBounds(0, 0, 750, 390);
        jMainPane.add(jPanelLog, javax.swing.JLayeredPane.DEFAULT_LAYER);
        this.setVisible(false);

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator2.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator3.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator4.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator5.setForeground(new java.awt.Color(255, 255, 255));

        jSeparator6.setForeground(new java.awt.Color(255, 255, 255));

        jLabelInfos.setFont(new java.awt.Font("Lucida Grande", 1, 12)); // NOI18N
        jLabelInfos.setForeground(new java.awt.Color(153, 0, 0));
        jLabelInfos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabelInfos.setText("...");
        jLabelInfos.setToolTipText("");
        jLabelInfos.setFocusable(false);

        org.jdesktop.layout.GroupLayout jPanelScreenLayout = new org.jdesktop.layout.GroupLayout(jPanelScreen);
        jPanelScreen.setLayout(jPanelScreenLayout);
        jPanelScreenLayout.setHorizontalGroup(
            jPanelScreenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelScreenLayout.createSequentialGroup()
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jLabelInfos, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 530, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(183, 183, 183))
            .add(jPanelScreenLayout.createSequentialGroup()
                .add(21, 21, 21)
                .add(jPanelScreenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanelScreenLayout.createSequentialGroup()
                        .add(1, 1, 1)
                        .add(jPanelScreenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(jLabelChat)
                            .add(jLabelShares)
                            .add(jLabelLog)
                            .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSeparator4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSeparator5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 82, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jSeparator3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                            .add(jLabelPeerings)
                            .add(jLabelSettings)))
                    .add(jLabelUsers)
                    .add(jLabelHome)
                    .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jSeparator6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 88, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
            .add(jPanelScreenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelScreenLayout.createSequentialGroup()
                    .addContainerGap(124, Short.MAX_VALUE)
                    .add(jMainPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 750, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );
        jPanelScreenLayout.setVerticalGroup(
            jPanelScreenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelScreenLayout.createSequentialGroup()
                .addContainerGap()
                .add(jLabelHome)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator6, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabelUsers)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabelShares)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabelChat)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabelPeerings)
                .add(5, 5, 5)
                .add(jSeparator4, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jLabelSettings)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSeparator5, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 10, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(7, 7, 7)
                .add(jLabelLog)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 115, Short.MAX_VALUE)
                .add(jLabelInfos)
                .add(20, 20, 20))
            .add(jPanelScreenLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                .add(jPanelScreenLayout.createSequentialGroup()
                    .add(jMainPane, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 378, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(0, 28, Short.MAX_VALUE)))
        );

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanelHeader, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, jPanelScreen, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(jPanelHeader, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .add(jPanelScreen, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 412, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jLogResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLogResetActionPerformed
        GUI.txtLog.setText("");
    }//GEN-LAST:event_jLogResetActionPerformed

    private void jLabelUsersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelUsersMouseClicked
        menuClicked(GUI.jLabelUsers,GUI.jPanelUsers);
        //jMainPane.setPosition(jPanelUsers, 0);
    }//GEN-LAST:event_jLabelUsersMouseClicked

    private void jLabelSharesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSharesMouseClicked
        menuClicked(GUI.jLabelShares,GUI.jPanelShares);
        //jMainPane.setPosition(jPanelShares, 0);
    }//GEN-LAST:event_jLabelSharesMouseClicked

    private void jLabelChatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelChatMouseClicked
        menuClicked(GUI.jLabelChat,GUI.jPanelChat);
        //jMainPane.setPosition(jPanelChat, 0);
    }//GEN-LAST:event_jLabelChatMouseClicked

    private void jLabelPeeringsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelPeeringsMouseClicked
        menuClicked(GUI.jLabelPeerings,GUI.jPanelPeerings);
        //If we are running under a mac erase unview counter
        if (Kb00m.OS_NAME.indexOf("mac") >= 0) {
                GUI.b00mCore.seenDownload(GUI.privateGroupContext);
            }
    }//GEN-LAST:event_jLabelPeeringsMouseClicked

    private void jLabelSettingsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelSettingsMouseClicked
        menuClicked(GUI.jLabelSettings,GUI.jPanelSettings);
    }//GEN-LAST:event_jLabelSettingsMouseClicked

    private void jLabelLogMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelLogMouseClicked
        menuClicked(GUI.jLabelLog,GUI.jPanelLog);
        //jMainPane.setPosition(jPanelLog, 0);
    }//GEN-LAST:event_jLabelLogMouseClicked

    private void jLogCopyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jLogCopyActionPerformed
        String str = GUI.txtLog.getText();
        StringSelection strsel = new StringSelection(str);
        Clipboard clbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clbrd.setContents(strsel, strsel);
        
        infos("Log successfully copied to clipboard");
    }//GEN-LAST:event_jLogCopyActionPerformed

    private void jLabelHomeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabelHomeMouseClicked
        menuClicked(GUI.jLabelHome,GUI.jPanelHome);
    }//GEN-LAST:event_jLabelHomeMouseClicked

    private void jButtonCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelActionPerformed
        //Make sure that user will accept Terms and Conditions
        System.out.println("[-]Terms And Conditions has NOT been accepted!\nExiting...");
        System.exit(0);
    }//GEN-LAST:event_jButtonCancelActionPerformed

    private void jButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonStartActionPerformed
        //User has accepted the Terms and Conditions.. GOOD !! ;)
        this.Disclaimer.setVisible(false);
        this.Disclaimer.dispose();
    }//GEN-LAST:event_jButtonStartActionPerformed

    private void jCheckBoxAcceptDisclaimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAcceptDisclaimerActionPerformed
        jCheckBoxAcceptAdult.setEnabled(true);
    }//GEN-LAST:event_jCheckBoxAcceptDisclaimerActionPerformed

    private void jCheckBoxAcceptAdultActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAcceptAdultActionPerformed
        //Activating the START button has user click Accept Terms
        jButtonStart.setEnabled(true);
    }//GEN-LAST:event_jCheckBoxAcceptAdultActionPerformed

    private void jButtonSendMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendMsgActionPerformed
        if(GUI.jTableUser.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Careful you don't have selected anyone !!");
            return;
        }
        
        String user = (String) GUI.jTableUser.getValueAt(GUI.jTableUser.getSelectedRow(), 0);
        
        if (user != null && !user.startsWith("Me") && !user.equals(b00mCore.getNickName())) {
            //Separating login from status
//            String[] tmp = jTableUser.getSelectionModel().toString().split(" ");

            JPrivateMessage pm = new JPrivateMessage(b00mGroup, user, b00mCore.getPrivateLibrary());
//            pm.displayMessage(true);
            
            //pm.setVisible(true);

        } else{
            JOptionPane.showMessageDialog(null, "Sending message to yourself is... weird !! :)");
        }
        
//        myapp.jListUsers.updateUI();
    }//GEN-LAST:event_jButtonSendMsgActionPerformed

    private void jButtonSendFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSendFileActionPerformed
        if(GUI.jTableUser.getSelectedRow() == -1){
            JOptionPane.showMessageDialog(null, "Careful you don't have selected anyone !!");
            return;
        }
        
        String user = (String) GUI.jTableUser.getModel().getValueAt(GUI.jTableUser.getSelectedRow(), 0);
        
        if (user != null && !user.startsWith("Me")) {
            //int optionPicked = JOptionPane.showConfirmDialog(null, "To send a file to a specific person you need to select one!! ;)");
            int optionPicked = JOptionPane.showConfirmDialog(null, "You are about to send a file to User: " + user);
            switch (optionPicked) {
                case 0:
                    JFileChooser chooser = new JFileChooser();
                    chooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
                    int retVal = chooser.showOpenDialog(this);
                    if (retVal == JFileChooser.APPROVE_OPTION) {
                        JOptionPane.showMessageDialog(null, "[+]Selected File sent is: " + chooser.getSelectedFile().getAbsolutePath() + "\n");
                    }
                    break;

                case 1:
                default:
                    break;
            }
        } else {
            JOptionPane.showMessageDialog(null, "Sending message to yourself is... weird !! :)");
        }
//        myapp.jListUsers.updateUI();
    }//GEN-LAST:event_jButtonSendFileActionPerformed

    private void jCustomGroupTitleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCustomGroupTitleActionPerformed
//        synchronized (jCustomGroupTitle) {
//            if (jCustomGroupTitle.getText().equals("Enter a group name")) {
//                jCustomGroupTitle.setText("");
//            }
//            if (jCustomGroupTitle.getText().isEmpty()) {
//                jCustomGroupTitle.setText("Enter a group name");
//            }
//        }
    }//GEN-LAST:event_jCustomGroupTitleActionPerformed

    private void jCustomGroupCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCustomGroupCreateActionPerformed
        //The 3 first tab are (pregenerated)
        String title = jCustomGroupTitle.getText();
        String desc = "Public P2P Group";
        String password = "mypassword";
        boolean publish = onOffPublish.isSelected();
        boolean auth = jCustomGroupSecurity.getSelectedItem().toString().contains("Password");
        
        
        //Avoid misconfiguration of group name
        if(title.contains("--")) return;
        if(title.length() <= Kb00m.PATTERN_LEN) return;
        if(title.length() > Kb00m.PATTERN_LEN+10) return;
        if(title.startsWith(".")) return;
        
        if(GUI.customGroups.containsKey(title.toUpperCase())){
            addLogMsg("[!]This group is already known, check your list");
            return;
        }
            
        
        //Set description
        if(auth)
            desc = "Password protected P2P Group";
        
        jLoading.setVisible(true);
        jLoading.setModal(true);
        jLabelLoading.setText("Configuring group...");
//        jProgressLoading.setString("Configuring group...");
        jProgressLoading.setValue(10);
        
        try {
            CustomGroup neoGrp = new CustomGroup(GUI.b00mGroup, title ,desc, publish, false);
            
            jLabelLoading.setText("Searching group...");
//            jProgressLoading.setString("Searching group...");
            jProgressLoading.setValue(30);
            GUI.customGroups.put(title.toUpperCase(), neoGrp);
//            neoGrp = neoCustomGrp.getGroup();
//            PeerGroup netPeerGrp = GUI.b00mGroup.getParentGroup();
//            PeerGroup neoGrp = netPeerGrp.newGroup(IDFactory.newPeerGroupID(netPeerGrp.getPeerGroupID()),Tools.createAllPurposePeerGroupImplAdv(title, desc), title, desc,publish);
            
                
        } catch (PeerGroupException ex) {
            addLogMsg("[!]Unable to create Private PeerGroup... :( "+ex.getMessage());
        }
        
            jLabelLoading.setText("Adding group to list...");
    //        jProgressLoading.setString("Adding group to list...");
            jProgressLoading.setValue(60);
            GUI.groupList.addCustomGroup(GUI.customGroups.get(title.toUpperCase()).getGrpAdv());
        
        
        //Hide progress indicator and peerGroup creation window
        jLoading.setVisible(false);
        jDialogCustomGroup.setVisible(false);
        
        //Create our new peerID
//        PeerID pid = IDFactory.newPeerID(current.getPeerGroupID(), Core.PeerName.getBytes());
        //Has we create a group, let's suppose we were about to join it ;)
//        current.joinPeerGroup(pid, password);
//        jProgressLoading.setValue(90);
//        jLabelLoading.setText("Adding services to group...");
//        jProgressLoading.setString("Adding services to group...");
//        current.startPeersListing();
//        current.startGroupServices();
        //JTextArea[] handles = PGPanel.getPGHandles();
        //b00m.addShareService(title, PGPanel.getPGSearch());
        //b00m.addChatService(title, handles[1]);

        //We increment the counter
        //nbGroups++;

        
    }//GEN-LAST:event_jCustomGroupCreateActionPerformed
    
    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        jDialogCustomGroup.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextChatSendKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextChatSendKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER && jTextChatSend.getText().length()!=0) {
            GUI.b00mCore.sendChatMsg(this.privateGroupContext,jTextChatSend.getText());
            jTextChatSend.setText(null);
        }
    }//GEN-LAST:event_jTextChatSendKeyPressed

    private void jButtonChatSendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonChatSendMouseClicked
        if (jTextChatSend.getText().length()!=0) {
            GUI.b00mCore.sendChatMsg(this.privateGroupContext,jTextChatSend.getText());
            jTextChatSend.setText(null);
        }
    }//GEN-LAST:event_jButtonChatSendMouseClicked

    private void jButtonSearchFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchFileActionPerformed
        
        if(this.jSearchFile.getText().length() < Kb00m.PATTERN_LEN){
            JOptionPane.showMessageDialog(null, "Your search must contain at least "+Kb00m.PATTERN_LEN+" letters/digits\n");
            return;
        }
        //Start Searching for contents in Peer Group
        GUI.b00mCore.searchFile(GUI.privateGroupContext, this.jSearchFile.getText(), GUI.jTypeList.getSelectedItem().toString(),false);
        updateSearchTable();
        //jButtonSearchFile.setEnabled(false);
        //jButtonStopSearchFile.setEnabled(true);
    }//GEN-LAST:event_jButtonSearchFileActionPerformed

    private void jSearchFileKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jSearchFileKeyPressed
            
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            jButtonSearchFileActionPerformed(null);
        }
    }//GEN-LAST:event_jSearchFileKeyPressed

    private void jButtonCreateGroupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonCreateGroupMouseClicked
        jDialogCustomGroup.setVisible(true);
        jDialogCustomGroup.setModal(true);
    }//GEN-LAST:event_jButtonCreateGroupMouseClicked

    private void jPPGListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jPPGListItemStateChanged
        //If the user has not selected the current context...
        if(!GUI.privateGroupContext.equalsIgnoreCase(jPPGList.getSelectedItem().toString())){
            //If the user has selected the first entry just skip it...
            if(jPPGList.getSelectedItem().toString().contains("--")) return;
            
            GUI.privateGroupContext = jPPGList.getSelectedItem().toString();
            JOptionPane.showMessageDialog(null, "Your are entering "+GUI.privateGroupContext+"'s world !!\n");
            //Generate own peerID
            PeerID pid = IDFactory.newPeerID(GUI.b00mGroup.getPeerGroupID(), Core.PeerName.getBytes());
            GUI.customGroups.get(GUI.privateGroupContext.toUpperCase()).joinPeerGroup(GUI.b00mGroup.getPeerID(), GUI.b00mGroup.getPeerGroupID().toString());
            GUI.customGroups.get(GUI.privateGroupContext.toUpperCase()).startGroupServices();
            GUI.customGroups.get(GUI.privateGroupContext.toUpperCase()).startPeersListing();
            
        }
    }//GEN-LAST:event_jPPGListItemStateChanged

    private void jComboChatStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboChatStatusActionPerformed
        b00mCore.updateUserStatus(this.privateGroupContext,jComboChatStatus.getSelectedItem().toString());
    }//GEN-LAST:event_jComboChatStatusActionPerformed

    private void btnReloadShareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReloadShareActionPerformed
        updateShareTable();
    }//GEN-LAST:event_btnReloadShareActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed
        //Avoid error if config has not been completed
        if(GUI.setNickName && b00mCore.isConnected()){
           disconnectB00m();
        }
    }//GEN-LAST:event_formWindowClosed

    private void jAddSharedDirectoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jAddSharedDirectoryActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.FILES_AND_DIRECTORIES);
        int retVal = chooser.showOpenDialog(this);
        if (retVal == JFileChooser.APPROVE_OPTION) {
            b00mCore.shareDirectoryInGroup(this.privateGroupContext, chooser.getSelectedFile());
            updateShareTable();
        }else{
            chooser.cancelSelection();
        }
    }//GEN-LAST:event_jAddSharedDirectoryActionPerformed

    private void nickNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nickNameKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if(GUI.nickName.getText().length()<5){
                infos("Your nickname is too short (5 letters minimum)");
            }else{
                GUI.setNickName = true;
                infos("");
            }
        }
    }//GEN-LAST:event_nickNameKeyPressed

    private void onOffButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onOffButtonMouseClicked
        if(b00mCore.isConnected()){
            infos("1/2 Wait please / Stopping services...");
            disconnectB00m();
        }else{
            infos("1/2 Wait please / Starting services...");
            connectB00m();
        }
    }//GEN-LAST:event_onOffButtonMouseClicked

    private void menuClicked(JLabel title, JPanel pane ){
        
        //If the user has clicked on a non-Enabled menu, just quit
        if(!title.isEnabled()) return;
        
        //We replace the previous clicked menu with normal look like
        GUI.curTitle.setForeground(new Color(51,51,51));
        GUI.curPanel.setVisible(false);
        //We replace the new clicked menu with clicked look like
        title.setForeground(Color.GRAY);
        pane.setVisible(true);
        //We store the current clicked menu
        GUI.curTitle = title;
        GUI.curPanel = pane;
    }
    /**
     * @param args the command line arguments
     */
    public void initCore() {
        Boolean nimbus = false;
        Image icon = new ImageIcon(getClass().getResource(Kb00m.APP_ICON)).getImage();;
        
        if(Kb00m.OS_NAME.indexOf("mac") >= 0){
            com.apple.eawt.Application application = com.apple.eawt.Application.getApplication();
            application.setDockIconBadge(null);
            application.setDockIconImage(icon);
            application.setQuitStrategy(com.apple.eawt.QuitStrategy.CLOSE_ALL_WINDOWS);

        }
        
        
        /*
        * Set the Nimbus look and feel
        */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
        * If Nimbus (introduced in Java SE 6) is not available, stay with the
        * default look and feel. For details see
        * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    nimbus = true;
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        GUI myapp = new GUI();
        
        
        infos("");
        //first make sure that Terms and Conditions are Accepted by User
        myapp.Disclaimer.setVisible(true);
        myapp.Disclaimer.setModal(true);
        
      
        //We can now show the main window
        myapp.setVisible(true);
        GUI.jLabelLog.setEnabled(true);
        GUI.onOffButton.setImage(new ImageIcon(getClass().getResource("/Picts/Small/Logout.png")).getImage());
        GUI.onOffButton.setSize(25, 25);
        //Search for Configuration file, it not found assumes that it is the first time
        //that we are using this Application
        
        GUI.config = new Config();
        
        if(GUI.config.isFirstTime()){

            //We ask the user his install place
            GUI.jPanelHome.setVisible(false);
            GUI.jPanelInit.setVisible(true);
            menuClicked(GUI.jLabelHome, GUI.jPanelInit);
            GUI.jMainPane.setPosition(GUI.jPanelInit, 0);
            
            GUI.config.createConfigFile();
            
            //We've completed the Step 1 of launching window
            myapp.jStep1Status.setEnabled(true);
            myapp.jLabelStep2.setEnabled(true);
            myapp.jLabelStep2Desc.setEnabled(true);
            
            while(!GUI.setNickName){
                try {
                    Thread.currentThread().sleep(100);
                } catch(InterruptedException ex) {
                    //If thread interrupted just break;
                    break;
                }
            }
            
            GUI.config.writeConfigValue("PeerName", GUI.nickName.getText());
            
        }
        //Interaction with init pane is over, we can allow navigation now...
        GUI.jLabelLog.setEnabled(true);
        
        infos("Reading config file...");
            //We load our config File
            
            GUI.config.readingConfigFile();
            //config.readingJXTAConfigFile(config.getNetworkManager());

        sharedPath = GUI.config.getSharedPath();
        String peerName = GUI.config.getPeerName();

        //We've completed the Step 2 of launching window
        GUI.jStep2Status.setEnabled(true);
        myapp.jLabelStep3.setEnabled(true);
        myapp.jLabelStep3Desc.setEnabled(true);
        
        infos("Wait please / Starting the network...");
        //Start the Core Process
        GUI.b00mCore = new Core(peerName);
        
        //Loading the group List
        GUI.groupList = GUI.b00mCore.getGroupModel();
        GUI.jPPGList.setModel(GUI.groupList);
        GUI.customGroups = new HashMap<String, CustomGroup>();
        
        GUI.b00mCore.launchB00m();
        
        //Store handle accessible in all the context
        GUI.b00mGroup = GUI.b00mCore.getB00mGroup().getGroup();
//        GUI.privateGroupContext = this.groupList.getSelectedItem().toString();
        GUI.privateGroupContext = GUI.b00mGroup.getPeerGroupName();
        GUI.customGroups.put(GUI.privateGroupContext.toUpperCase(), GUI.b00mCore.getB00mGroup());
        
        //If we've started let's enable the main button
        GUI.onOffButton.setImage(new ImageIcon(getClass().getResource("/Picts/Small/Login.png")).getImage());
        
        //Retrieve our nickname and print it
        myapp.jLabelNickName.setText(GUI.b00mCore.getNickName());
        myapp.jLabelChatRoom.setText(jLabelChatRoom.getText()+GUI.privateGroupContext);
        myapp.jLabelPath.setText(GUI.sharedPath);
        
        //Listener is implemented, so we can enable service
        GUI.jButtonSendFile.setEnabled(true);
        GUI.jButtonSendMsg.setEnabled(true);

        //All done, let's hide the launching window
        myapp.jStep3Status.setEnabled(true);
        
        //Bring up the home panel
        GUI.jPanelInit.setVisible(false);
        GUI.jPanelLog.setVisible(false);
        GUI.jPanelChat.setVisible(false);
        GUI.jPanelSettings.setVisible(false);
        GUI.jPanelPeerings.setVisible(false);
        GUI.jPanelShares.setVisible(false);
        GUI.jPanelHome.setVisible(true);
        menuClicked(jLabelHome,jPanelHome);
        
        //The service listing is now started
        myapp.jButtonCreateGroup.setEnabled(true);
        
        infos("Wait please / Starting services...");
        GUI.b00mCore.startServices(GUI.config.getSharedDir());
        loadData(GUI.privateGroupContext);
        
        
        GUI.jLabelShares.setEnabled(true);
        GUI.jLabelChat.setEnabled(true);
        GUI.jAddSharedDirectory.setEnabled(true);
        
        
        GUI.jLabelPeerings.setEnabled(true);
        GUI.jLabelSettings.setEnabled(true);
        
//        b00mCore.refreshSharedFilesList(this.privateGroupContext,myapp.mySharedTable);
        
        infos("Network succesfully started / Searching for other peers...");
        
        //If we are already RDV for the global group, or connected to one
        if(GUI.b00mGroup.isRendezvous() || GUI.b00mCore.getB00mGroup().isRDVConnected()) infos("HAPPY SHARING ;) !!");
        
    }
    
    private void connectB00m(){
        //Prevent multiple call to connect/Disconnect
        GUI.onOffButton.setImage(new ImageIcon(getClass().getResource("/Picts/Small/LoginDisabled.png")).getImage());
        //Initializing all needed obejcts and reconnect to JXTA network
        GUI.b00mCore.launchB00m();
        
        //Reset the context
        GUI.privateGroupContext = GUI.b00mGroup.getPeerGroupName();
        
        infos("2/2 Wait please / Starting services...");
        GUI.b00mCore.startServices(GUI.config.getSharedDir());
        
        //Reactivate services access
        GUI.jLabelUsers.setEnabled(true);
        GUI.jLabelShares.setEnabled(true);
        GUI.jLabelChat.setEnabled(true);
        
        //Reload Data
        loadData(GUI.privateGroupContext);
        
        //Inform User everything has gone good
        infos("YOU ARE NOW RE-CONNECTED TO "+Core.MAINGROUP_NAME+"!! ;)");
        GUI.onOffButton.setImage(new ImageIcon(getClass().getResource("/Picts/Small/Login.png")).getImage());
    }
    
    private void disconnectB00m(){
        GUI.onOffButton.setImage(new ImageIcon(getClass().getResource("/Picts/Small/LoginDisabled.png")).getImage());
        infos("2/2 Wait please / Stopping services...");
        //Check that b00m is not already stopped
        if(b00mCore.isConnected()){
            addLogMsg("[!] Disconnecting b00m chat...");
            addLogMsg("[!] Disconnecting b00m share...");
            addLogMsg("[!] Disconnecting b00m...");

            // finalizing all Objects
            b00mCore.B00mStop();
            
            //Unset the context
            GUI.privateGroupContext = null;
            
            //Deactivate services access
            GUI.jLabelUsers.setEnabled(false);
            GUI.jLabelShares.setEnabled(false);
            GUI.jLabelChat.setEnabled(false);
        
        }
        //Inform User everything has gone good
        infos("YOU ARE NOW DISCONNECTED FROM b00m :(");
        GUI.onOffButton.setImage(new ImageIcon(getClass().getResource("/Picts/Small/Logout.png")).getImage());
            
    }
    
    protected void loadData(final String context){
        
        this.userList = GUI.b00mCore.getUserModel();
        this.searchResults = GUI.b00mCore.getSearchResults();
        this.downloadList = GUI.b00mCore.getDownloadModel(context);
        this.uploadList = GUI.b00mCore.getUploadModel(context);
        this.library = GUI.b00mCore.getLibrary(context);
        
        
        //Loading the search table
        GUI.mySearchTable.setTreeTableModel(this.searchResults);
        GUI.mySearchTable.setRootVisible(false);
        GUI.mySearchTable.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(final MouseEvent e) {
                final int rowIndex = GUI.mySearchTable.rowAtPoint(e.getPoint());
                final int colIndex = GUI.mySearchTable.columnAtPoint(e.getPoint());

                if (rowIndex < 0) {
                    return;
                }

                final SearchNode selectedNode = (SearchNode) GUI.mySearchTable.getPathForRow(rowIndex).getLastPathComponent();
                
                if (e.getClickCount() == 2) {
                    if (selectedNode.getPattern().isEmpty()) {
                        addLogMsg("[+]Downloading file: " + selectedNode.getName());
                        searchResults.setSearchStatus(selectedNode,Kb00m.DOWNLOAD);
                        LibraryNode tmp = library.isInLibrary(selectedNode.getHash());
                        if(tmp != null){
                            JOptionPane.showMessageDialog(null, "This file ("+selectedNode.getName()+")\nalready exists in your directory at:\n"+tmp.getPath()+"\n");
                        }else{
                            GUI.b00mCore.downloadFile(context, selectedNode);
                        }
                        updateDownloadTable();
                    }else if (selectedNode.getStatus().equals(Kb00m.FOLLOW) || selectedNode.getStatus().equals(Kb00m.FOLLOW_PAUSE)){
                        addLogMsg("[+]Revert tracking to standard search: " + selectedNode.getPattern());
                        if(selectedNode.getStatus().equals(Kb00m.FOLLOW))
                            searchResults.setSearchStatus(selectedNode,Kb00m.RESUME);
                        else
                            searchResults.setSearchStatus(selectedNode,Kb00m.PAUSE);
                        GUI.b00mCore.revertTracker(selectedNode);
                    }else{
                        addLogMsg("[+]Tracking search: " + selectedNode.getPattern());
                        if(selectedNode.getStatus().equals(Kb00m.RESUME))
                            searchResults.setSearchStatus(selectedNode,Kb00m.FOLLOW);
                        else
                            searchResults.setSearchStatus(selectedNode,Kb00m.FOLLOW_PAUSE);
                        GUI.b00mCore.makeTracker(selectedNode);
                    }
                    //Reload data display
                    updateSearchTable();
                }
                else if(colIndex == 6){
                    if (selectedNode.getStatus().equals(Kb00m.RESUME)) {
                        addLogMsg("[!]Pausing search: " + selectedNode.getPattern());
                        GUI.b00mCore.suspendSearch(context, selectedNode.getPattern());
                        searchResults.setSearchStatus(selectedNode,Kb00m.PAUSE);
                    } else if (selectedNode.getStatus().equals(Kb00m.PAUSE)) {
                        addLogMsg("[+]Resuming search: " + selectedNode.getPattern());
                        GUI.b00mCore.resumeSearch(context, selectedNode.getPattern());
                        searchResults.setSearchStatus(selectedNode,Kb00m.RESUME);
                    } else if (selectedNode.getStatus().equals(Kb00m.FOLLOW)) {
                        addLogMsg("[+]Pausing tracking: " + selectedNode.getPattern());
                        GUI.b00mCore.suspendSearch(context, selectedNode.getPattern());
                        searchResults.setSearchStatus(selectedNode,Kb00m.FOLLOW_PAUSE);
                    } else if (selectedNode.getStatus().equals(Kb00m.FOLLOW_PAUSE)) {
                        addLogMsg("[+]Resuming tracking: " + selectedNode.getPattern());
                        GUI.b00mCore.resumeSearch(context, selectedNode.getPattern());
                        searchResults.setSearchStatus(selectedNode,Kb00m.FOLLOW);
                    }
                    //Reload data display
                    updateSearchTable();
                }
                else if(colIndex == 7){
                    if (selectedNode.getAction().equals(Kb00m.DELETE)) {
                        addLogMsg("[!]Deleting search: " + selectedNode.getPattern());
                        GUI.b00mCore.stopSearch(context, selectedNode.getPattern());
                        searchResults.removeSearch(selectedNode);
                        //Reload data display
                        updateSearchTable();
                    }
//                    else if (selectedNode.getAction().equals(Kb00m.FOLLOW)) {
//                        addLogMsg("[+]Following file: " + selectedNode.getName());
//                    }
                }
            }
        });
        
        GUI.mySearchTable.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        GUI.mySearchTable.getColumnModel().getColumn(0).setPreferredWidth(150);
        GUI.mySearchTable.getColumnModel().getColumn(1).setPreferredWidth(50);
        GUI.mySearchTable.getColumnModel().getColumn(2).setPreferredWidth(100);
        GUI.mySearchTable.getColumnModel().getColumn(3).setPreferredWidth(267);
        GUI.mySearchTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer()
        {

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(row % 2 == 0 ? Color.LIGHT_GRAY : Color.WHITE);
                String stat = (String) searchResults.getValueAt(value,8);
                if(stat.equals(Kb00m.FOLLOW) || stat.equals(Kb00m.FOLLOW_PAUSE)){
//                   GUI.myLibrary.setLeafIcon(null);
                    c.setBackground(Color.CYAN);
                }else if(stat.equals(Kb00m.DOWNLOAD)){
                    c.setBackground(Color.GREEN);
                }
                    
                return c;
            }
        });
        
        //Loading the users table
        GUI.jTableUser.setModel(this.userList);
        GUI.jTableUser.setEnabled(true);
        GUI.jTableUser.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        GUI.jTableUser.getColumnModel().getColumn(0).setPreferredWidth(130);
        GUI.jTableUser.getColumnModel().getColumn(1).setPreferredWidth(50);
        GUI.jButtonSearchUser.setEnabled(true);
        GUI.jTableUser.setDefaultRenderer(Object.class, new DefaultTableCellRenderer()
        {

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(row % 2 == 0 ? Color.LIGHT_GRAY : Color.WHITE);
                return c;
            }
        });

        GUI.jLabelUsers.setEnabled(true);
        
        //Loading the download table
        GUI.downloadTable.setTreeTableModel(this.downloadList);
        GUI.downloadTable.setRootVisible(false);
        GUI.downloadTable.setEnabled(true);
        GUI.downloadTable.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        GUI.downloadTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        GUI.downloadTable.getColumnModel().getColumn(1).setPreferredWidth(130);
        GUI.downloadTable.getColumnModel().getColumn(5).setPreferredWidth(20);
        GUI.downloadTable.getColumnModel().getColumn(6).setPreferredWidth(20);
        GUI.downloadTable.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(final MouseEvent e) {
                final int rowIndex = GUI.downloadTable.rowAtPoint(e.getPoint());
                final int colIndex = GUI.downloadTable.columnAtPoint(e.getPoint());

                if (rowIndex < 0) {
                    return;
                }

                final Transfert selectedNode = downloadList.getTransfertAt(rowIndex);
                
                if(colIndex == 5){
                        if(selectedNode.getStatus().equals("Suspended")){
                            addLogMsg("[+]Resuming download transfert: " + selectedNode.getName());
                            downloadList.updateTransferStatus(selectedNode.getName(), "Resuming");
                        }else{
                            addLogMsg("[!]Suspending download transfert: " + selectedNode.getName());
                            downloadList.updateTransferStatus(selectedNode.getName(), "Suspended");
                        }
                    
                }else if(colIndex == 6){
                    addLogMsg("[!]Deleting download transfert: " + selectedNode.getName());
                    downloadList.removeTransfert(selectedNode);
                }
            }
        });
        GUI.downloadTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer()
        {

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(row % 2 == 0 ? Color.LIGHT_GRAY : Color.WHITE);
                return c;
            }
        });
        
        //Loading the upload table
        GUI.uploadTable.setTreeTableModel(this.uploadList);
        GUI.uploadTable.setRootVisible(false);
        GUI.uploadTable.setEnabled(true);
        GUI.uploadTable.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        GUI.uploadTable.getColumnModel().getColumn(0).setPreferredWidth(20);
        GUI.uploadTable.getColumnModel().getColumn(1).setPreferredWidth(130);
        GUI.uploadTable.getColumnModel().getColumn(5).setPreferredWidth(20);
        GUI.uploadTable.getColumnModel().getColumn(6).setPreferredWidth(20);
        GUI.uploadTable.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(final MouseEvent e) {
                final int rowIndex = GUI.uploadTable.rowAtPoint(e.getPoint());
                final int colIndex = GUI.uploadTable.columnAtPoint(e.getPoint());

                if (rowIndex < 0) {
                    return;
                }

                final Transfert selectedNode = uploadList.getTransfertAt(rowIndex);
                
                if(colIndex == 5){
                        if(selectedNode.getStatus().equals("Suspended")){
                            addLogMsg("[!]Resuming upload transfert: " + selectedNode.getName());
                            uploadList.updateTransferStatus(selectedNode.getName(), "Resuming");
                        }else{
                            addLogMsg("[!]Suspending upload transfert: " + selectedNode.getName());
                            uploadList.updateTransferStatus(selectedNode.getName(), "Suspended");
                        }
                    
                }else if(colIndex == 6){
                    addLogMsg("[!]Deleting upload transfert: " + selectedNode.getName());
                    uploadList.removeTransfert(selectedNode);
                }
            }
        });
        GUI.uploadTable.setDefaultRenderer(Object.class, new DefaultTableCellRenderer()
        {

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(row % 2 == 0 ? Color.LIGHT_GRAY : Color.WHITE);
                return c;
            }
        });
        
        //Loading the shared directory
        GUI.myLibrary.setTreeTableModel(this.library);
        GUI.myLibrary.setRootVisible(false);
        GUI.myLibrary.addMouseListener(new MouseAdapter() {

            @Override
            public void mouseClicked(final MouseEvent e) {
                final int rowIndex = GUI.myLibrary.rowAtPoint(e.getPoint());
                final int colIndex = GUI.myLibrary.columnAtPoint(e.getPoint());

                if (rowIndex < 0) {
                    return;
                }

                final LibraryNode selectedNode = (LibraryNode) GUI.myLibrary.getPathForRow(rowIndex).getLastPathComponent();
                
                if(colIndex == 6){
                    if (selectedNode.getType().equals(Kb00m.DIRECTORY)) {
                        //If the parentNode is the default one just skip action
                        if(selectedNode.getAction() == null)
                            return;
                        //Else remove the parentNode and associated nodes
                        addLogMsg("[!] Deleting directory: " + selectedNode.getDirectory());
                        library.removeDirectory(selectedNode);
                        //Reload data display
                        updateShareTable();
                    }
                    //If the node is a file
                    else {
                        addLogMsg("[!] Deleting file: " + selectedNode.getName());
                        library.removeFile(selectedNode);
                        //Reload data display
                        updateShareTable();
                    }
                }
            }
        });
        
        GUI.myLibrary.setAutoResizeMode(JTable.AUTO_RESIZE_SUBSEQUENT_COLUMNS);
        GUI.myLibrary.getColumnModel().getColumn(0).setPreferredWidth(150);
        GUI.myLibrary.getColumnModel().getColumn(1).setPreferredWidth(50);
        GUI.myLibrary.getColumnModel().getColumn(2).setPreferredWidth(50);
        GUI.myLibrary.getColumnModel().getColumn(3).setPreferredWidth(250);
        GUI.myLibrary.getColumnModel().getColumn(6).setPreferredWidth(15);
        GUI.myLibrary.setDefaultRenderer(Object.class, new DefaultTableCellRenderer()
        {

            @Override
            public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
                final Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
                c.setBackground(row % 2 == 0 ? Color.LIGHT_GRAY : Color.WHITE);
                return c;
            }
        });
        
        //Reload share table
        updateShareTable();
        //Reload search table
        updateSearchTable();
        //Reload download and upload table
        updateDownloadTable();
        updateUploadTable();
    }
    
    protected static void updateSearchTable(){
        try{
            GUI.mySearchTable.updateUI();
        }catch(Exception e){
            //Catch exception but Do nothing
        }
    }
    
    protected static void updateDownloadTable(){
        GUI.downloadTable.updateUI();
    }
    
    protected static void updateUploadTable(){
        GUI.uploadTable.updateUI();
    }
    
    protected static void userLogoff(String user){
        GUI.jTextChatArea.append("<"+user+"> has left the group");
    }
    
    protected static void updateShareTable(){
        GUI.myLibrary.updateUI();
    }
    
//    protected static void updatePeerList(List usersList){
//        //usersList.set(usersList.indexOf(b00mCore.getNickName()),"Me ("+b00mCore.getStatus()+")");
//        jListUsers.setListData(usersList.toArray());
//    }
    
    protected static void addPeerGroup(String pgName){
        GUI.jPPGList.addItem(pgName);
    }
    
    protected static void removePeerGroup(String pgName){
        GUI.jPPGList.removeItem(pgName);
    }
    
    protected static void addChatMsg(String chatMsg){
        GUI.jTextChatArea.append(chatMsg);
    }
    
    protected static void addLogMsg(String logMessage){
        GUI.txtLog.append(logMessage+"\n");
    }
    
    protected static void infos(String message){
        GUI.jLabelInfos.setText(message);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDialog Disclaimer;
    private javax.swing.JButton btnReloadShare;
    private static org.jdesktop.swingx.JXTreeTable downloadTable;
    private static javax.swing.JButton jAddSharedDirectory;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButtonCancel;
    private javax.swing.JButton jButtonChatSend;
    private javax.swing.JLabel jButtonCreateGroup;
    private javax.swing.JButton jButtonSearchFile;
    private static javax.swing.JButton jButtonSearchUser;
    private static javax.swing.JButton jButtonSendFile;
    private static javax.swing.JButton jButtonSendMsg;
    private javax.swing.JButton jButtonStart;
    private javax.swing.JCheckBox jCheckBoxAcceptAdult;
    private javax.swing.JCheckBox jCheckBoxAcceptDisclaimer;
    private javax.swing.JComboBox jComboChatStatus;
    private javax.swing.JButton jCustomGroupCreate;
    private javax.swing.JComboBox jCustomGroupSecurity;
    private javax.swing.JTextField jCustomGroupTitle;
    private javax.swing.JDialog jDialogCustomGroup;
    private javax.swing.JPanel jHeaderAlert1;
    private javax.swing.JPanel jHeaderAlert2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabelAlert;
    private static javax.swing.JLabel jLabelChat;
    private javax.swing.JLabel jLabelChatRoom;
    private static javax.swing.JLabel jLabelHome;
    private static javax.swing.JLabel jLabelInfos;
    protected javax.swing.JLabel jLabelLoading;
    private static javax.swing.JLabel jLabelLog;
    private javax.swing.JLabel jLabelLogo;
    private javax.swing.JLabel jLabelNickName;
    private javax.swing.JLabel jLabelPath;
    private static javax.swing.JLabel jLabelPeerings;
    private static javax.swing.JLabel jLabelSettings;
    private static javax.swing.JLabel jLabelShares;
    private javax.swing.JLabel jLabelStep1;
    private javax.swing.JLabel jLabelStep1Desc;
    private javax.swing.JLabel jLabelStep2;
    private javax.swing.JLabel jLabelStep2Desc;
    private javax.swing.JLabel jLabelStep3;
    private javax.swing.JLabel jLabelStep3Desc;
    private javax.swing.JLabel jLabelSubLogo;
    private static javax.swing.JLabel jLabelUsers;
    private javax.swing.JDialog jLoading;
    private javax.swing.JButton jLogCopy;
    private javax.swing.JButton jLogReset;
    private static javax.swing.JLayeredPane jMainPane;
    private static javax.swing.JComboBox jPPGList;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelAlert;
    private static javax.swing.JPanel jPanelChat;
    private javax.swing.JPanel jPanelHeader;
    private static javax.swing.JPanel jPanelHome;
    private static javax.swing.JPanel jPanelInit;
    private static javax.swing.JPanel jPanelLog;
    private static javax.swing.JPanel jPanelPeerings;
    private javax.swing.JPanel jPanelScreen;
    private static javax.swing.JPanel jPanelSettings;
    private static javax.swing.JPanel jPanelShares;
    private static javax.swing.JPanel jPanelUsers;
    protected javax.swing.JProgressBar jProgressLoading;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jSearchFile;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JSeparator jSeparator6;
    private javax.swing.JScrollPane jSharedPane;
    private javax.swing.JLabel jStep1Status;
    private static javax.swing.JLabel jStep2Status;
    private javax.swing.JLabel jStep3Status;
    private javax.swing.JTabbedPane jTabbedPane1;
    private static javax.swing.JTable jTableUser;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private static javax.swing.JTextArea jTextChatArea;
    private javax.swing.JTextField jTextChatSend;
    private javax.swing.JTextField jTextField3;
    private static javax.swing.JComboBox jTypeList;
    private java.awt.Label label1;
    private static org.jdesktop.swingx.JXTreeTable myLibrary;
    private static org.jdesktop.swingx.JXTreeTable mySearchTable;
    private static javax.swing.JTextField nickName;
    private static org.jdesktop.swingx.JXImagePanel onOffButton;
    private com.petersoft.advancedswing.onoffbutton.OnOffButton onOffPublish;
    private com.petersoft.advancedswing.onoffbutton.OnOffButton onOffRDV;
    private static com.petersoft.advancedswing.onoffbutton.OnOffButton onOffSharing;
    private static javax.swing.JTextArea txtLog;
    private static org.jdesktop.swingx.JXTreeTable uploadTable;
    // End of variables declaration//GEN-END:variables

}
